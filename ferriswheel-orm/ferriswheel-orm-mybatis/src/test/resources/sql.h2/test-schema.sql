DROP TABLE IF EXISTS T_USER;
DROP TABLE IF EXISTS T_ROLE;
DROP TABLE IF EXISTS T_U2R;
DROP TABLE IF EXISTS T_PERMISSION;
DROP TABLE IF EXISTS T_MENU;
DROP TABLE IF EXISTS T_R2P;
DROP TABLE IF EXISTS T_BLOG;
DROP TABLE IF EXISTS T_ARTICLE;
DROP TABLE IF EXISTS T_AUTHOR;

CREATE TABLE T_USER (
  ID          BIGINT IDENTITY,
  LOGIN_NAME  VARCHAR(32) NOT NULL UNIQUE,
  NAME        VARCHAR(32),
  PASSWORD    VARCHAR(32),
  EMAIL       VARCHAR(100),
  OTHER       VARCHAR(512),
  PRIMARY KEY (ID)
);

CREATE TABLE T_ROLE (
  ID        BIGINT IDENTITY,
  ROLE_NAME VARCHAR(255) NOT NULL UNIQUE,
  PRIMARY KEY (ID)
);
CREATE TABLE T_U2R (
  USER_ID BIGINT NOT NULL,
  ROLE_ID BIGINT NOT NULL,
  PRIMARY KEY (USER_ID, ROLE_ID),
  FOREIGN KEY (USER_ID) REFERENCES T_USER (ID),
  FOREIGN KEY (ROLE_ID) REFERENCES T_ROLE (ID)
);

CREATE TABLE T_MENU (
  ID         BIGINT IDENTITY,
  PARENT_ID  BIGINT,
  MENU_NAME  VARCHAR(50),
  ALIAS_NAME VARCHAR(50),
  MENU_URL   VARCHAR(512),
  MENU_TYPE  VARCHAR(50),
  ORDER_NUM  INT,
  PRIMARY KEY (id)
);

CREATE TABLE T_PERMISSION (
  ID          BIGINT IDENTITY,
  ROLE_ID     BIGINT,
  MENU_ID     BIGINT,
  RES_NAME    VARCHAR(50),
  RES_CN_NAME VARCHAR(50),
  OPERATION   VARCHAR(50),
  PRIMARY KEY (id)
);
CREATE TABLE T_R2P (
  role_id BIGINT NOT NULL,
  perm_id BIGINT NOT NULL,
  FOREIGN KEY (role_id) REFERENCES T_ROLE (ID),
  FOREIGN KEY (perm_id) REFERENCES T_PERMISSION (ID)
);

CREATE TABLE T_BLOG (
  ID           BIGINT IDENTITY,
  TITLE        VARCHAR(255) NOT NULL,
  AUTHOR       VARCHAR(20),
  CATEGORY     VARCHAR(50),
  URL          VARCHAR(512),
  OTHER        VARCHAR(1024),
  CREATER      VARCHAR(20),
  PUBLISH_DATE DATE,
  PRIMARY KEY (id)
);

CREATE TABLE T_AUTHOR (
  ID          BIGINT IDENTITY,
  USER_ID     VARCHAR(32) NOT NULL UNIQUE,
  USER_NAME   VARCHAR(32),
  EMAIL       VARCHAR(100),
  DESCRIBE_INFO    VARCHAR(512),
  PRIMARY KEY (ID)
);

CREATE TABLE T_ARTICLE (
  ID BIGINT IDENTITY PRIMARY KEY,
  TITLE varchar(50) not null,
  CATEGORY varchar(50),
  URL varchar(256),
  PUBLISH_DATE date,
  AUTHOR_ID BIGINT NOT NULL,
  FOREIGN KEY (AUTHOR_ID) REFERENCES T_AUTHOR (ID)
);



